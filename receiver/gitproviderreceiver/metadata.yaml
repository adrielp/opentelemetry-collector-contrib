type: gitprovider
scope_name: otelcol/gitproviderreceiver

sem_conv_version: 1.25.0

status:
  class: receiver
  stability:
    alpha: [metrics]
  distributions: [contrib]
  codeowners:
    active: [adrielp, andrzej-stencel]

resource_attributes:
  organization.name:
    enabled: true
    description: VCS Organization
    type: string
  vcs.vendor.name:
    enabled: true
    description: The name of the VCS vendor/provider (ie. GitHub)
    type: string

attributes:
  # vcs.repository.url.full:
  #   description: The full URL of the VCSP repository.
  #   type: string
  repository.name:
    description: The name of a VCS repository
    type: string
  ref.name:
    description: The name of a VCS branch
    type: string
  ref.type:
    description: The type of ref (branch, tag).
    type: string
    enum:
      - branch
      - tag
  pull_request.state:
    description: The state of a pull request
    type: string
    enum:
      - open
      - merged

metrics:
  vcs.repository.count:
    enabled: true
    description: The number of repositories in an organization.
    unit: "{repository}"
    gauge:
      value_type: int
    attributes: []
  vcs.repository.branch.count:
    enabled: true
    description: The number of branches in a repository.
    unit: "{branch}"
    gauge:
      value_type: int
    attributes: [repository.name]
  vcs.repository.ref.time:
    enabled: true
    description: Time a ref (branch) created from the default branch (trunk) has existed. The `ref.type` attribute will always be `branch`.
    unit: s
    gauge:
      value_type: int
    attributes: [repository.name, ref.name, ref.type]
    # attributes: [repository.name, ref.name, ref.type]
  vcs.repository.branch.commit.aheadby.count:
    enabled: true
    description: The number of commits a branch is ahead of the default branch (trunk).
    unit: "{commit}"
    gauge:
      value_type: int
    attributes: [repository.name, ref.name]
  vcs.repository.branch.commit.behindby.count:
    enabled: true
    description: The number of commits a branch is behind the default branch (trunk).
    unit: "{commit}"
    gauge:
      value_type: int
    attributes: [repository.name, ref.name]
  vcs.repository.branch.line.addition.count:
    enabled: true
    description: The number of lines added in a branch relative to the default branch (trunk).
    unit: "{line}"
    gauge:
      value_type: int
    attributes: [repository.name, ref.name]
  vcs.repository.branch.line.deletion.count:
    enabled: true
    description: The number of lines deleted in a branch relative to the default branch (trunk).
    unit: "{line}"
    gauge:
      value_type: int
    attributes: [repository.name, ref.name]
  vcs.repository.contributor.count:
    enabled: false
    description: The number of unique contributors to a repository.
    unit: "{contributor}"
    gauge:
      value_type: int
    attributes: [repository.name]
  vcs.repository.pull_request.time_open:
    enabled: true
    description: The amount of time a pull request has been open.
    unit: s
    gauge:
      value_type: int
    attributes: [repository.name, ref.name]
  vcs.repository.pull_request.time_to_merge:
    enabled: true
    description: The amount of time it took a pull request to go from open to merged.
    unit: s
    gauge:
      value_type: int
    attributes: [repository.name, ref.name]
  vcs.repository.pull_request.time_to_approval:
    enabled: true
    description: The amount of time it took a pull request to go from open to approved.
    unit: s
    gauge:
      value_type: int
    attributes: [repository.name, ref.name]
  vcs.repository.pull_request.count:
    description: The number of pull requests in a repository, categorized by their state (either open or merged).
    enabled: true
    gauge:
      value_type: int
    unit: "{pull_request}"
    attributes: [pull_request.state, repository.name]

tests:
  config:
